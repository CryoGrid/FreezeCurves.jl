var documenterSearchIndex = {"docs":
[{"location":"api/Solvers/#Solvers","page":"Solvers","title":"Solvers","text":"","category":"section"},{"location":"api/Solvers/","page":"Solvers","title":"Solvers","text":"The Solvers sub-module provides an interface for performing non-linear root-finding, e.g. solving implicit freeze curve formulations or recovering temperature given enthalpy, on the soil freeze characteristic curves implemented in this package. Note that this is not to be confused with parameter inference which is handled by a separate sub-module.","category":"page"},{"location":"api/Solvers/","page":"Solvers","title":"Solvers","text":"DocTestSetup = quote\n    using FreezeCurves\n    using FreezeCurves.Solvers\nend","category":"page"},{"location":"api/Solvers/","page":"Solvers","title":"Solvers","text":"Modules = [FreezeCurves.Solvers]\nPrivate = false\nOrder = [:type, :function, :macro]","category":"page"},{"location":"api/Solvers/#FreezeCurves.Solvers.SFCCInverseEnthalpyObjective","page":"Solvers","title":"FreezeCurves.Solvers.SFCCInverseEnthalpyObjective","text":"SFCCInverseEnthalpyObjective{TF,Tkwargs<:NamedTuple,Thc,TL,TH} <: AbstractSFCCObjective\n\nOptimization objective for finding a temperature, T, wich resolves the conservation equation:\n\n0 = (H - Lθ)C - T\n\ngiven a fixed enthalpy value H and freeze curve arguments f_args.\n\n\n\n\n\n","category":"type"},{"location":"api/Solvers/#FreezeCurves.Solvers.SFCCNewtonSolver","page":"Solvers","title":"FreezeCurves.Solvers.SFCCNewtonSolver","text":"SFCCNewtonSolver <: SFCCSolver\n\nFast, specialized implementation of Newton's method with backtracking line search for resolving the energy conservation law, H = TC + Lθ. Attempts to find the root of the corresponding temperature residual: ϵ = T - (H - Lθ(T)) / C(θ(T)) and uses backtracking to avoid jumping over the solution. This prevents convergence issues that arise due to discontinuities and strong non-linearity in most common soil freeze curves.\n\n\n\n\n\n","category":"type"},{"location":"api/Solvers/#FreezeCurves.Solvers.SFCCPreSolver","page":"Solvers","title":"FreezeCurves.Solvers.SFCCPreSolver","text":"SFCCPreSolver{TCache} <: SFCCSolver\n\nA fast SFCC \"solver\" which pre-builds an interpolant for the freeze curve in terms of enthalpy, θ(H). Note that this solver is only valid when all freeze curve parameters are held constant and will produce incorrect results otherwise.\n\n\n\n\n\n","category":"type"},{"location":"api/Solvers/#FreezeCurves.Solvers.heatcapacity-Tuple{Number, Number}","page":"Solvers","title":"FreezeCurves.Solvers.heatcapacity","text":"heatcapacity(c_frozen::Number, c_thawed::Number; θtot=1.0)\n\nPiecewise constant heat capacity function:\n\nf(θw) =\n    begincases\n    c_f  θw  θtot \n    c_t  textotherwise\n    endcases\n\n\n\n\n\n","category":"method"},{"location":"api/Solvers/#FreezeCurves.Solvers.heatcapacity-Tuple{Number}","page":"Solvers","title":"FreezeCurves.Solvers.heatcapacity","text":"heatcapacity(c::Number)\n\nHeat capacity function f(H,T,θw) = c where c is a pre-specified constant.\n\n\n\n\n\n","category":"method"},{"location":"api/Solvers/#FreezeCurves.Solvers.sfccsolve-Union{Tuple{return_all}, Tuple{FreezeCurves.Solvers.AbstractSFCCObjective, SFCCSolver, Any}, Tuple{FreezeCurves.Solvers.AbstractSFCCObjective, SFCCSolver, Any, Val{return_all}}} where return_all","page":"Solvers","title":"FreezeCurves.Solvers.sfccsolve","text":"sfccsolve(obj::AbstractSFCCObjective, solver::SFCCSolver, x₀, ::Val{return_all}=Val{true}()) where {return_all}\n\nSolve the given objective obj using solver and initial guess x₀. If return_all=true, then sfccsolve should return a named tuple with at least the temperature solution T, the liquid water content θw, the heat capacity C, and the liquid water content deriviative dθdT defined. Solver-specific additional values may also be included.\n\n\n\n\n\n","category":"method"},{"location":"api/Solvers/#FreezeCurves.Solvers.sfccsolve-Union{Tuple{return_all}, Tuple{FreezeCurves.Solvers.SFCCInverseEnthalpyObjective, FreezeCurves.Solvers.SFCCNewtonSolver, Number}, Tuple{FreezeCurves.Solvers.SFCCInverseEnthalpyObjective, FreezeCurves.Solvers.SFCCNewtonSolver, Number, Val{return_all}}} where return_all","page":"Solvers","title":"FreezeCurves.Solvers.sfccsolve","text":"sfccsolve(obj::SFCCInverseEnthalpyObjective, solver::SFCCNewtonSolver, T₀::Number, ::Val{return_all}=Val{true}(); error_when_not_converged=true)\n\nSolves obj using the specialized Newton solver and returns the result. If return_all is true, a named tuple (;T, Tres, θw, C, itercount) is returned; otherwise (by default), only the solution temperature is returned.\n\n\n\n\n\n","category":"method"},{"location":"api/#Index-of-public-API","page":"Index of public API","title":"Index of public API","text":"","category":"section"},{"location":"api/","page":"Index of public API","title":"Index of public API","text":"","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"api/FreezeCurves/#FreezeCurves","page":"FreezeCurves","title":"FreezeCurves","text":"","category":"section"},{"location":"api/FreezeCurves/","page":"FreezeCurves","title":"FreezeCurves","text":"Modules = [FreezeCurves]\nPrivate = false\nOrder = [:type, :function, :macro]","category":"page"},{"location":"api/FreezeCurves/#FreezeCurves.BrooksCorey","page":"FreezeCurves","title":"FreezeCurves.BrooksCorey","text":"BrooksCorey{Twp,Tψₛ,Tλ} <: SWRCFunction\n\nvan Genuchten MT, 1980. A closed-form equation for predicting the hydraulic conductivity of unsaturated soils.     Soil Science Society of America Journal, 44(5): 892–898. DOI: 10.2136/sssaj 1980.03615995004400050002x.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.DallAmico","page":"FreezeCurves","title":"FreezeCurves.DallAmico","text":"DallAmico{Tftp,Tg,Tswrc<:SWRCFunction} <: SFCCFunction\n\nDall'Amico M, 2010. Coupled water and heat transfer in permafrost modeling. Ph.D. Thesis, University of Trento, pp. 43.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.DallAmicoSalt","page":"FreezeCurves","title":"FreezeCurves.DallAmicoSalt","text":"DallAmicoSalt{Tftp,Tsc,TR,Tg,Tswrc<:SWRCFunction} <: SFCCFunction\n\nFreeze curve from Dall'Amico (2011) with saline freezing point depression.\n\nAngelopoulos M, Westermann S, Overduin P, Faguet A, Olenchenko V, Grosse G, Grigoriev MN. Heat and salt flow in subsea permafrost     modeled with CryoGRID2. Journal of Geophysical Research: Earth Surface. 2019 Apr;124(4):920-37.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.McKenzie","page":"FreezeCurves","title":"FreezeCurves.McKenzie","text":"McKenzie{Tftp,Twp,Tγ} <: SFCCFunction\n\nMcKenzie JM, Voss CI, Siegel DI, 2007. Groundwater flow with energy transport and water-ice phase change:     numerical simulations, benchmarks, and application to freezing in peat bogs. Advances in Water Resources,     30(4): 966–983. DOI: 10.1016/j.advwatres.2006.08.008.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.SFCC","page":"FreezeCurves","title":"FreezeCurves.SFCC","text":"SFCC{F,S} <: FreezeCurve\n\nGeneric representation of the soil freezing characteristic curve along with a nonlinear solver for resolving the temperature-energy conservation law. The shape and parameters of the curve are determined by the implementation of SFCCFunction f.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.SFCCFunction","page":"FreezeCurves","title":"FreezeCurves.SFCCFunction","text":"SFCCFunction\n\nBase type for a soil freeze characteristic curve (SFCC) function. Subtypes should be callable structs that implement the freeze curve and contain any necessary additional constants or configuration options. User-specified parameters can either be supplied in the struct or declared as model parameters via the variables method.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.SFCCSolver","page":"FreezeCurves","title":"FreezeCurves.SFCCSolver","text":"SFCCSolver\n\nBase type representing non-linear solvers for implicit SFCC functions.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.SWRCFunction","page":"FreezeCurves","title":"FreezeCurves.SWRCFunction","text":"SWRCFunction\n\nBase type for soil water retention curves (SWRC) which relate soil water matric potential to water content.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.SoilFreezeThawProperties","page":"FreezeCurves","title":"FreezeCurves.SoilFreezeThawProperties","text":"SoilFreezeThawProperties{TTₘ,TLsl}\n\nStruct containing constants/parameters common to some or all SFCCs.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.SoilFreezeThawProperties-Tuple{SFCCFunction}","page":"FreezeCurves","title":"FreezeCurves.SoilFreezeThawProperties","text":"SoilFreezeThawProperties(f::SFCCFunction)\n\nRetrieves the default SoilFreezeThawProperties from f; should be defined for all freeze curves.\n\n\n\n\n\n","category":"method"},{"location":"api/FreezeCurves/#FreezeCurves.SoilWaterProperties","page":"FreezeCurves","title":"FreezeCurves.SoilWaterProperties","text":"SoilWaterProperties{Tρw,Tθres,Tθtot,Tθsat}\n\nStruct containing basic physical constants and propeties related to soil pore water.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.SoilWaterProperties-Tuple{SFCCFunction}","page":"FreezeCurves","title":"FreezeCurves.SoilWaterProperties","text":"SoilWaterProperties(f::SFCCFunction)\n\nRetrieves the nested SoilWaterProperties from the SoilFreezeThawProperties of the freeze curve f.\n\n\n\n\n\n","category":"method"},{"location":"api/FreezeCurves/#FreezeCurves.SoilWaterProperties-Tuple{SWRCFunction}","page":"FreezeCurves","title":"FreezeCurves.SoilWaterProperties","text":"SoilWaterProperties(f::SWRCFunction)\n\nGet the SoilWaterProperties defined for the given SWRCFunction f. Must be implemented for all SWRCFunction types. Default implementation retrieves the field water.\n\n\n\n\n\n","category":"method"},{"location":"api/FreezeCurves/#FreezeCurves.VanGenuchten","page":"FreezeCurves","title":"FreezeCurves.VanGenuchten","text":"VanGenuchten{Twp,Tα,Tn} <: SWRCFunction\n\nvan Genuchten MT, 1980. A closed-form equation for predicting the hydraulic conductivity of unsaturated soils.     Soil Science Society of America Journal, 44(5): 892–898. DOI: 10.2136/sssaj 1980.03615995004400050002x.\n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#FreezeCurves.Westermann","page":"FreezeCurves","title":"FreezeCurves.Westermann","text":"Westermann{Tftp,Twp,Tδ} <: SFCCFunction\n\nWestermann, S., Boike, J., Langer, M., Schuler, T. V., and Etzelmüller, B.: Modeling the impact of     wintertime rain events on the thermal regime of permafrost, The Cryosphere, 5, 945–959,     https://doi.org/10.5194/tc-5-945-2011, 2011. \n\n\n\n\n\n","category":"type"},{"location":"api/FreezeCurves/#Unitful.ustrip-Tuple{Union{SFCCFunction, SWRCFunction}}","page":"FreezeCurves","title":"Unitful.ustrip","text":"ustrip(x)\n\nReconstructs the type or function x with all numerical quantities stripped of units.\n\n\n\n\n\n","category":"method"},{"location":"#FreezeCurves.jl","page":"Home","title":"FreezeCurves.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"FreezeCurves is a lightweight Julia package to facilitate the study and analysis of soil freezing characteristics (Koopmans and Miller, 1966). The relationship between temperature and unfrozen water content in porous media (such as soils) is often highly nonlinear and plays a significant role in the analysis of freeze-thaw dynamics in science and engineering. One common application is in the geophysical modeling of permafrost, where having faithful representations of freeze-thaw processes is often paramount to accurately resolving long-term changes in the subsurface thermal regime.","category":"page"},{"location":"#Table-of-contents","page":"Home","title":"Table of contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"index.md\",\"api/index.md\"]","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The soil freezing characteristic curve (SFCC) is typically a monotonic function which maps (usually subzero) temperatures [°C] to volumetric unfrozen/liquid water contents [m³/m³]. The SFCC is closely related to the soil-water retention curve (SWRC) which governs the similar non-linear realtionship between soil-water matric potential [m] saturation [m³/m³]. SWRCs are widely used in hydrological modeling, with the two most common formulations being the van Genuchten (1980) and Brooks-Corey (Brooks, 1965) models. SFCCs are less widely known, but numerous models have been proposed over the years (Kurylyk and Watanbe, 2013).","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package is intended to act as a living repository of SFCC/SWRC implementations which can then be fitted to data or consumed downstream by thermal or hydrological models such as CryoGrid (Westermann et al. 2022), or more specifically its sibling Julia implementation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Currently this package provides (or will provide) implementations of the following freeze curves:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Name Description Independent variable Formulation\nFreeWater Simple, piecewise-linear freeze/thaw scheme for pure \"free\" water. Enthalpy Explicit\nDallAmico Coupled water-retention model of Dall'Amico (2011). Temperature Explicit\nDallAmicoSalt Same as DallAmico but accounting for freezing point depressions due to salinity. Temperature Explicit\nMcKenzie Exponential-type empirical model of McKenzie et al. (2007) Temperature Explicit\nWestermann Nonlinear empirical model of Westermann et al. (2011) Temperature Explicit","category":"page"},{"location":"#Getting-started","page":"Home","title":"Getting started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"FreezeCurves.jl can be installed using the Julia package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add FreezeCurves","category":"page"},{"location":"","page":"Home","title":"Home","text":"or","category":"page"},{"location":"","page":"Home","title":"Home","text":"import Pkg\nPkg.add(\"FreezeCurves\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"All freezing characteristic curves are implemented as \"callable\" structs subtyping SFCCFunction. Callable structs are those with corresponding method definitions that allow them to be invoked like a function. As an example, we can initialize the freeze curve of McKenzie et al. (2007) with default parameter settings:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using FreezeCurves\n\nmkfc = McKenzie()","category":"page"},{"location":"","page":"Home","title":"Home","text":"The curve can then be evaluated at a particular temperature by calling it as a function:","category":"page"},{"location":"","page":"Home","title":"Home","text":"mkfc(-1.0u\"°C\")\n# output\n1.860037988010418e-44","category":"page"},{"location":"","page":"Home","title":"Home","text":"The McKenzie struct contains default parameter settings necessary to evaluate the freeze curve. These can also be customized on construction. We could, for example, use a different value for the shape parameter, γ [K]","category":"page"},{"location":"","page":"Home","title":"Home","text":"mkfc2 = McKenzie(γ=1.0u\"K\")\nmkfc2(-1.0u\"°C\")\n# output\n0.18393972058572117","category":"page"},{"location":"","page":"Home","title":"Home","text":"which results in a much longer curve with more than 18% unfrozen water content by volume at -1.0 °C!","category":"page"},{"location":"","page":"Home","title":"Home","text":"All freeze curves also accept their parameters (excluding some constants) as function arguments, with default values set to those found in the struct. For example, the full method signature for McKenzie is:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(f::McKenzie)(T; θtot, θsat, θres, Tₘ, γ)","category":"page"},{"location":"","page":"Home","title":"Home","text":"where θtot is the total (volumetric) water content (water + ice), θsat is the saturated water content (a.k.a natural porosity), θres is the residual water content, Tₘ is the melting temperature, and γ is the aforementioned shape parameter. We could have, therefore, adjusted the shape parameter by simply setting the keyword argument for our original mkfc:","category":"page"},{"location":"","page":"Home","title":"Home","text":"mkfc(-1.0u\"°C\", γ=1.0u\"K\")\n# output\n0.18393972058572117","category":"page"},{"location":"","page":"Home","title":"Home","text":"In cases where it is more convenient/appropriate to modify the default parameter values in the struct itself, it's worth noting that some parameters are nested one or two levels deep, e.g. setting the saturated water content (porosity) for a DallAmico freeze curve would look like:","category":"page"},{"location":"","page":"Home","title":"Home","text":"dafc = DallAmico(swrc=VanGenuchten(water=SoilWaterProperties(θsat=0.75)))","category":"page"},{"location":"","page":"Home","title":"Home","text":"This is admittedly somewhat unwieldy, so FreezeCurves re-exports @set! from Setfield.jl to make this a bit easier:","category":"page"},{"location":"","page":"Home","title":"Home","text":"dafc = DallAmico()\n@set! dafc.swrc.water.θsat = 0.75\ndafc.swrc.water.θsat\n# output\n0.75","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note also that FreezeCurves.jl strictly uses unitful quantities (from Unitful.jl) to ensure physical coherence and avoid confusion between temperature units. The macro u\"°C\" applies units of degrees Celsius to the floating point number -0.1 (the degree symbol can be typed in the Julia REPL or editor using \\degree followed the TAB key). Speical method dispatches for ustrip are provided for freeze and water retention curve function types that will automatically strip the units from all fields nested within the function struct. When used without units, all temperatures are assumed to be in degrees Celsius (°C)!","category":"page"},{"location":"","page":"Home","title":"Home","text":"mkfc_nounits = ustrip(mkfc)\nmkfc_nounits(-0.1)\n# output\n0.1839397205856375","category":"page"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Brooks RH. Hydraulic properties of porous media. Colorado State University; 1965.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Dall'Amico M, Endrizzi S, Gruber S, Rigon RJ. A robust and energy-conserving model of freezing variably-saturated soil. The Cryosphere. 2011 Jun 1;5(2):469-84.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Koopmans RW, Miller RD. Soil freezing and soil water characteristic curves. Soil Science Society of America Journal. 1966 Nov;30(6):680-5.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Kurylyk BL, Watanabe K. The mathematical representation of freezing and thawing processes in variably-saturated, non-deformable soils. Advances in Water Resources. 2013 Oct 1;60:160-77.","category":"page"},{"location":"","page":"Home","title":"Home","text":"McKenzie JM, Voss CI, Siegel DI. Groundwater flow with energy transport and water–ice phase change: numerical simulations, benchmarks, and application to freezing in peat bogs. Advances in water resources. 2007 Apr 1;30(4):966-83.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Westermann S, Boike J, Langer M, Schuler TV, Etzelmüller B. Modeling the impact of wintertime rain events on the thermal regime of permafrost. The Cryosphere. 2011 Oct 26;5(4):945-59.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Westermann S, Ingeman-Nielsen T, Scheer J, Aalstad K, Aga J, Chaudhary N, Etzelmüller B, Filhol S, Kääb A, Renette C, Schmidt LS. The CryoGrid community model (version 1.0)–a multi-physics toolbox for climate-driven simulations in the terrestrial cryosphere. Geoscientific Model Development Discussions. 2022 Jun 7:1-61.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Van Genuchten MT. A closed‐form equation for predicting the hydraulic conductivity of unsaturated soils. Soil science society of America journal. 1980 Sep;44(5):892-8.","category":"page"}]
}
